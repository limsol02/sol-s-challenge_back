### 1. 흥미로운 도입
상상해보세요. 당신은 대형 쇼핑몰에 있는데, 필요한 물건들을 하나씩 찾아 다니는 대신, 
한 곳에 앉ㅇ아 원한ㄴ 상품 목록을 작성합니다. 그러면 로봇이 그 목록을 가지고 상점 곳곳을 돌아다니며
필요한 물건들을 모아서 당신에게 가져다 줍니다. 이 과정에서 당신은 상점을 한발짜고 돌아다니지 않습니다
이 상상속 이야기는 jQuery Ajax와 비슷합ㄴ디ㅏ 웹 페이지에서 ajax를 사용하면 사용자는
그 페이지를 전환하거나 새로고침할 필요 없이 필요한 데이터를 서버에 요청하고, 서버는 그 요청에 따른 데이터를
반환합니다. 여기서 로봇은 ajax요청을 처리하는 스크립트이며, 상점은 데이터를 제공하는 서버, 그리고 당신의 목록은 서버애 보내는 요청입니다,

### 2. 학습목표
- jquery ajax를 사용하여 비동기적으로 서버와 통신하는 방법을 이해하고 실습합니다.
- JSON 데이터 형식의 이해와 사용 방법을 익힙니다.
- DAO의 역할과 중요성을 파악하고, 간단한 CRUD 작업을 수행하는 DAO를 구현합니다. 

### 3. 주요 핵심 키워드
- **jquery ajax** : 비동기적 웹 어플리케이션 제작을 위한 jQuery의 메소드
- **JSON(javascript object notation)** : 데이터 교환 포맷, 가볍고 읽기 쉬운 키-값 쌍을 사용
- **DAO(Data Access Object)** : 데이터베이스의 데이터에 접근하기 위한 객체, CRUD 작업을 캡슐화

### 4. 생각하고 토론해볼 내용
- 비동기 통신이 웹 애플리케이션 사용자 경험에 어떤 영향을 미치는가?
- JSON이 다른 데이터 포맷(예:XML)에 비해 가지는 장점과 단점은 무엇인가?
- DAO 패턴을 사용함으로써 얻을 수 있는 이점은 무엇이며, 어떤 상황에서 특히 유용한가?

### 5. 간단한 퀴즈
1. jquery ajax요청에서 `GET` 와 `POST`메소드의 차이점은 무엇인가요?
2. JSON 데이터 포맥의 기본 구조는 어떻게 생겼나요?
3. DAO는 왜 중요한가요? DAO를 사용하는 이유는 무엇인가요?

### 6. 실무적용예시
-**웹 페이지에서의 실시간 데이터 갱신** : 사용자가 페이지를 새로고침 하지 않아도 최신 데이터를 보여주는 대시보드 구현
-**JSON을 이용한 서버와의 데이터 교환** : 사용자 정보를 JSON 형태로 서버에 전송하고, 서버로부터 처리 결과를 JSON으로 받아 화면에 표시
-**DAO를 이용한 데이터베이스 관리** : 사용자 정보에 대한 CRUD 작업을 처리하는 웹 어플리케이션에서,
	DAO를 통해 데이터베이스 로직과 비지니스 로직을 분리하여 관리