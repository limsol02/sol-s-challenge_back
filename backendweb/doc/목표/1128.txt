### 1. 흥미로운 도입
웹 페이지는 마치 레스토랑과 같습니다. 고객(브라우저)이 주문(request)을 하면, 
요리사(서버)는 요리(response)를 준비하여 제공합니다. 고객이 자주 오는 단골이라면,
그들의 취향(세션)을 기억하여 특별한 서비스를 제공할 수 있죠. JSP에서의 `request`,
`response`, `session` 객체는 이런 상호작용을 가능하게 하는 핵심 요소들입니다.

### 2. 학습목표
- `request`, `response`, `session` 객체의 역할과 사용 방법을 이해합니다.
- 서블릿과 JSP에서 이 객체들이 어떻게 사용되는지 알아봅니다.
- 웹 애플리케이션에서 상태 관리의 중요성을 이해합니다.

### 3. 주요 핵심 키워드와 개념
- **Requset 객체** : 클라이언트의 요청정보를 담고 있으면, 사용자의 데이터, 파라미터, 
	헤더 정보 등을 포함합니다.
- **Response 객체** : 서버의 응답을 구성하는 객체로, 클라이언트에게 전송될 데이터를 담습니다.
- **Session 객체** : 사용자의 세션을 관리하여, 사용자별로 서버에 저장되는 정보를 관리합니다.

### 4. 생각하고 토론할 내용
- 세션 관리 없이 사욪아 인증이 어떻게 달라질까요?
- `request`, `reponse` 객체를 사용하여 사용자의 요청과 서버의 응답을 어떻게
	더 효율적으로 관리할 수 있을까요?
- 세션과 쿠기의 차이점은 무엇이며, 어떤 경우에 각각 사용하는 것이 좋을까요?

### 5. 간단한 퀴즈
1) JSP에서 사용자가 요청한 URL의 쿼리 스트링을 가져오는 `request` 객체의 메소드는 무엇인가요?
 	- a) `getRequestURL()` 
 	- b) `getQuertyString()`
 	- c) `getRequsetURI()`
 	- d) `getParameter()`
 
 2) 세션에서 특정 속성 값을 가져오기 위해 사용하는 메소드는 무엇인가요?
 	-a) `getAttribute()`
 	-b) `getSession()`
 	-c) `getValue()`
 	-d) `getSessionAttribute()`
 	
 ### 6. 실무적용예시
 - **사용자 로그인** : 사용자가 로그인할 때, 그들의 로그인 정보(예 : 사용자 ID)룰
 	색션 객체에 저장하여 페이지간 인증상태를 유지합니다.
 - **양식 데이터 처리** : 사용자가 양식(Form)을 제출할 대, `request` 객체를 사용하여
 	사용가자 입력한 데이터(예 : 사용자이름, 비밀번호)를 추출하고 처리합니다.
 - **사용자별 컨텐츠 제공 ** : 로그인한 사용자의 정보(예: 선호하는 언어, 테마)를 세션에
 	저장하고, 이를 기반으로 사용자별 맞춤형 컨텐츠를 제공합니다.
 	
 