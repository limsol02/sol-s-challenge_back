1. 웹 어플리케이션의 구성 요소
	웹 브라우저 <===> 웹서버 <===> 웹 어플리케이션 서버 <===> 데이터베이스
	
	1) 웹 브라우저와 웹 서버간의 
		- 요청호출 : 웹 브라우저가 웹 서버에 서비스 실행을 요청한다.
			request : jsp에서 요청값을 받는 객체
			# [요청1] : url에 주소를 입력시 #
				- 프로그래밍 : 
					- a href = ""
					- js : locaction.href = ""
					- form action = ""
			
			# [요청2] : 주소 뒤에 요청값 key=val
				- a href = "/webprj/login.jsp?id=himan"
				- js : location.href="/webprj/login.jsp?id=himan"
				- form action  = "login.jsp"
					name="id" value="himan"
					submit ==> form 안에 submit버튼 클릭시
					
		- 웹어플레이션 서버내에서 위 요청값에 따른 처리
			login.jsp?id=himan ==> 서버안에 특정 자원(login.jsp)가 호출되고,
			id=himan를 request.getParameter("id")
				= ${param.id}
		==> dao연동해서 받은 아이디/패스워드 값을 확인 후 기능메서드에 의해
			Member객체로 할당/ null값으로 처리..
 		
		- 결과출력 : 웹 서버는 결과를 웹 브라우저에 html 코드로 보낸다.
			==> null일때는 로그인 실패 내용 전달
				Member객체가 있을 때는 로그인 성공 내용 전달
					session 객체에 할당
			이후, jsp로 위 내용을 html로 만들어서, response 객체에 의해 클라이언트에 전달.
			
			response : jsp에서 전송시 처리하는 객체
			
	
	2) 웹브라우저는 웹 서버에서 받은 html 코드를 랜더링해서 화면에 출력한다.
	
2. 실행순서
	1) 웹브라우저는 웹서버에 어떤 기능을 원하는지 요청한다.
		url주소 특정자원호출, 요청값(key=val) 전달
		
	2) 웹서버는 웹 어플리케이션을 실행하여 웹브라우저가 요청한 기능을 수행한 후, 
		결과를 웹 브라우저에 응답한다.
	
	3) 웹 브라우저는 웹 서버로부터의 응답결과를 출력한다.

3. url(uniform resource locator)
	1) 구성
		프로토콜:// 호스트명 : 포트/경로/파일명.확장자?쿼리스트링
		ex) http://www.google.com/search/hl=en&q=jsp&aq=f
		ex) http://221.76.81.25/search/hl=en&q=jsp&aq=f
		ex) http://localhost/search/hl=en&q=jsp&aq=f
		
		- www.google.com : 도메인주고
		도메인 기관에 의해서 고유ip 주소로 변경처리되어 특정 서버에 접근을 한다.
		
		- localhost : 테스트용으로 현재 컴퓨터 웹서버와 클라이언트가 같이 있어서
			실행할 때, loopback ip주소(127.0.0.1)로 사용되는 키워드
	
	2) url은 웹어플리케이션에 요청을 구분하기 위한 용도로 사용된다.
	
4. 서블릿과 jsp
	1) 자바를 만든 sun에서 정한 웹 개발 표준
		- 서블릿 : 실행 코드 방식의 특징
		- jsp(javaserver page) : 스크립트 코드 방식의 특징
		
	2) jsp의 특징
		- 자바 기반 스크립트 언어
		=> 자바의 기능을 그대로 사용 가능
		- http에 대한 클라이언트의 요청 처리/응답
		- 웹 어플리케이션에 결과 화면을 생성할 때, 주로 사용
		
	XXX.JSP ==> XXXXServlet.java ==> XXXServlet.class
	
	XXXServlet.class WAS(안에서 메모리로 실행하는데, 실행되는 명령내용)
		reponse에 의해 html코드를 만듦, 요청하는 브라우저에 전달..
		
5. 웹 컨테이너
	1) 웹 어플리케이션을 실행할 수 있는 컨테이너
	2) jsp와 서블릿을 실행해준다.
		웹 컨테이너 : jsp, 서블릿
		
6. jsp를 사용하는 이유
	1) 자바 언어에 기반하기 때문에 플랫폼에 독립적 리눅스, 윈도우 등 운영체제에 상관없이 동작
	2) 자바 언어에 대한 깊은 이해 없이도 초기 학습 가능
		-> 스크립트 언어는 상대적으로 자바 언어보다 단순
	3) 스프링이나 스트러츠와 같은 프레임워크와 완벽하게 연동
	
### jsp 웹 프로그램
1. java, html, css, javascript

2. 컴퓨터가 프로그램 처리하는 순서
	1) 서브단에서 java + html(css,javascript)가 일단 만들어지고
	
	2) 최종적으로 html(css,javascript) 를 만들어서 브라우저에 전달
	
	3) 브라우저는 html을 받아서(js코드가 있는경우 js를 처리하고) 처리하여 화면에 표현
	[주의] java를 통해 javascript 코드를 조건에 의해서 변경처리는 가능하나,
		javascript코드의 조건이나 이벤트에 java코드를 변경 처리는 할 수 없다.