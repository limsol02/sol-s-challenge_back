### 1. 흥미로운 도입
상상해보세요. 당신은 레스토랑에 있습니다. 음식을 주문했지만, 웨이터가 실수로 잘못된 요리를 가져왔다고 합시다.
이 상황에서 웨이터는 실수를 바로잡고, 올바른 음식을 제공해야 합니다. 이처럼 웹 개발에서도, 예외상황을 적절하게
처리하는 것은 사용자 경험을 향상시키는 중요한 요소입니다. JSP에서 예외처리는 이와 같은 상황에 대응하는 방법을 제공합니다.

### 2. 학습목표
- 예외와 예외 처리의 기본 개념 이해
- JSP에서 예외 처리 방법 학습
- 사용자 친화적인 오류 페이지 생성 방법 이해

### 3. 주요 핵심 키워드와 개념
- **예외(Exception)** : 프로그램 실행 중 발생하는 예외적인 상황
- **예외처리(Exception Handing)** : 프로그램의 비정상적인 종료를 막고, 정상적인 실행 상태를 유지하기 위한 프로세스
- **try-catch 블록** : 예외가 발생할 수 있는 코드를 감싸고, 예외 발생시 이를 잡아내는 블럭
- **errorPage와 isErrorPage** : JSP에서 예외 페이지를 지정하고 처리하는 지시어
- **Throwable 객체** : 예외상황에 대한 정보를 담고 있는 객체

### 4. 생각하고 토론해볼 내용
- 예외처리를 할 때 사용자에게 어떤 정보를 제공해야 할까요?
- 모든 예외를 일괄적으로 처리하는 것이 좋은 방법인가요, 아니면 예외 유형에 따라 다르게 처리하는것이 좋은 방법인가요?
- 개발 중 예외 처리를 어떻게 통합하여 더 나은 코드 품질을 달성할 수 있을까요?
